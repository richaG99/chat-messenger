# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
cdesk.auth.key="VntBmHce5F@6GbB7"
cdesk.auth.login_retries=10
cdesk.session_token.expiry_seconds=2592000
//30 days
amp.password.secret=6e4eb4cb403130bd97c6a548c84238ae9db98fe4
amp.encryption.delimiter=--

# The application languages
# ~~~~~
application.langs="en"

## The CORS on/off switch
cors.enabled=true

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# Disable play's default DB plugin - We are using HikariCP and this property is required
dbplugin=disabled

db.default.url="jdbc:postgresql://localhost:5432/reporting"
db.default.user=amp
db.default.password=collective123

db {
  # reporting DB
  # All times in milliseconds
  default {
    driver=org.postgresql.Driver
    driverClassName=${db.default.driver}
    jdbcUrl="${db.default.url}"
    username="${db.default.user}"
    connectionTimeout=30000
    # connectionTimeout 30 seconds
    idleTimeout=120000
    # idleTimeout 2 minutes
    maximumPoolSize=20
    poolName="reporting-db-pool"
  }

}

logger.scala.slick.session=ERROR
logger.scala.slick.jdbc.JdbcBackend.statement=ERROR

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled
# slick.default="models.*"

# Caching Control
play.cache.configResource=ehcache.xml
cache.enabled=true
cache.expiry.seconds=900

# CDB Webservice
# Remember to configure these urls in the nginx config file desk in reachui repo for different environments
# qa: cm.qa.cdb.collective-media.net
# staging: cm.stgcdb.collective-media.net
# production: cm.cdb.collective-media.net
cdb.server.host="http://cm.ssp.cdb.collective-media.net"
cdb.cache.host="http://cm.ssp.cdb.collective-media.net"
#cdb.cache.host="http://cdesk-cache.collective-media.net:9080"
cdb.user.login=insights-admin
cdb.retry.count=2
cdb.retry.delay.seconds=15
cdb.customreports.retry.delay.seconds=120
ws.acceptAnyCertificate=true
cdb.delivery.xml.encoding=iso-8859-1

cdb.testing.authtoken=c66d4c4d7352c5b7436b113377fa5a88914cf3e3fe3f0dc4e8a8107d97d678d5

cdb.request.timeout=1800000 // 30 minutes

## Campaign List filter -- Dirty Hack into Data
dir.reports.campaigns.inventory=/cdesk/reports/campaigns/CAMPAIGN_ID/inventory
dir.reports.campaigns.optimization=/cdesk/reports/campaigns/CAMPAIGN_ID/optimization
dir.reports.campaigns.viewability=/cdesk/reports/campaigns/CAMPAIGN_ID/viewability
dir.reports.default.report=/cdesk/reports/default

# Upload Reports Settings
dir.uploaded.reports=/cdesk/uploadedreports
# Uplaoded report max size in MB
uploaded.report.maxsize=10
#File name extensions that are allowed
uploaded_reports_file_extensions="ppt,pptx,xls,xlsx,pdf"

# Riemann host details
riemann.host=localhost
riemann.port=5555
riemann.sendevent=false
riemann.buffersize=30
datacenter.name=ewr004


# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=INFO
# Logger used by the framework:
logger.play=INFO
# Logger provided to your application:
logger.application=DEBUG
logger.play.api.libs.ws=DEBUG

akka{
  jvm-exit-on-fatal-error = off
}
