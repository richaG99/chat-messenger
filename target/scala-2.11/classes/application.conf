# This is the main configuration file for the application.
# ~~~~~

# The application languages
# ~~~~~
application.langs="en"

## The CORS on/off switch
cors.enabled=true

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# Disable play's default DB plugin - We are using HikariCP and this property is required
dbplugin=disabled

db.default.url="jdbc:postgresql://localhost:5432/reporting"
db.default.user=amp
db.default.password=collective123

db {
  # reporting DB
  # All times in milliseconds
  default {
    driver=org.postgresql.Driver
    driverClassName=${db.default.driver}
    jdbcUrl="${db.default.url}"
    username="${db.default.user}"
    connectionTimeout=30000
    # connectionTimeout 30 seconds
    idleTimeout=120000
    # idleTimeout 2 minutes
    maximumPoolSize=20
    poolName="reporting-db-pool"
  }

}

logger.scala.slick.session=ERROR
logger.scala.slick.jdbc.JdbcBackend.statement=ERROR

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled
# slick.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=INFO
# Logger used by the framework:
logger.play=INFO
# Logger provided to your application:
logger.application=DEBUG
logger.play.api.libs.ws=DEBUG

akka{
  jvm-exit-on-fatal-error = off
}
